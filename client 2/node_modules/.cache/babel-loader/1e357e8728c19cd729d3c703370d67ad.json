{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\Work\\\\Order Room\\\\client\\\\src\\\\Components\\\\Calendar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react'; // must go before plugins\n\nimport dayGridPlugin from '@fullcalendar/daygrid'; // a plugin!\n\nimport AddEventModal from './AddEventModal';\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Event = require(\"../../../server/Models/Event\");\n\nexport default function Calendar() {\n  _s();\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [events, setEvents] = useState([]);\n  const calendarRef = useRef(null);\n\n  const onEventAdded = event => {\n    let calendarApi = calendarRef.current.getApi();\n    calendarApi.addEvent({\n      start: moment(event.start).toDate(),\n      end: moment(event.end).toDate(),\n      title: event.title\n    });\n  };\n\n  async function handleEventAdd(data) {\n    console.log(data.event); // await axios.post(\"/api/calendar/create-event\", data.event);\n\n    const event = Event(data.body);\n    await event.save();\n  }\n\n  async function handleDatesSet(data) {\n    const response = await axios.get(\"/api/calendar/get-events?start=\" + moment(data.start).toISOString() + \"&ends=\" + moment(data.end).toISOString()).then();\n    setEvents(response.data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setModalOpen(true),\n      children: \"Add Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        zIndex: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n        ref: calendarRef,\n        events: events,\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\",\n        eventAdd: event => handleEventAdd(event),\n        datesSet: date => handleDatesSet(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddEventModal, {\n      isOpen: modalOpen,\n      onClose: () => setModalOpen(false),\n      onEventAdded: event => onEventAdded(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Calendar, \"alGqhFOvN39NkiVw7ppUvjKrWQ0=\");\n\n_c = Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["C:/Users/user/Documents/Work/Order Room/client/src/Components/Calendar.jsx"],"names":["React","useRef","useState","FullCalendar","dayGridPlugin","AddEventModal","axios","moment","Event","require","Calendar","modalOpen","setModalOpen","events","setEvents","calendarRef","onEventAdded","event","calendarApi","current","getApi","addEvent","start","toDate","end","title","handleEventAdd","data","console","log","body","save","handleDatesSet","response","get","toISOString","then","position","zIndex","date"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,QAAsC,OAAtC;AACA,OAAOC,YAAP,MAAyB,qBAAzB,C,CAA+C;;AAC/C,OAAOC,aAAP,MAA0B,uBAA1B,C,CAAkD;;AAClD,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,8BAAD,CAArB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAE/B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMa,WAAW,GAAGd,MAAM,CAAC,IAAD,CAA1B;;AAEA,QAAMe,YAAY,GAAGC,KAAK,IAAI;AAC1B,QAAIC,WAAW,GAAGH,WAAW,CAACI,OAAZ,CAAoBC,MAApB,EAAlB;AACAF,IAAAA,WAAW,CAACG,QAAZ,CAAqB;AACjBC,MAAAA,KAAK,EAAEf,MAAM,CAACU,KAAK,CAACK,KAAP,CAAN,CAAoBC,MAApB,EADU;AAEjBC,MAAAA,GAAG,EAAEjB,MAAM,CAACU,KAAK,CAACO,GAAP,CAAN,CAAkBD,MAAlB,EAFY;AAGjBE,MAAAA,KAAK,EAAER,KAAK,CAACQ;AAHI,KAArB;AAKH,GAPD;;AASA,iBAAeC,cAAf,CAA8BC,IAA9B,EAAmC;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACV,KAAjB,EAD+B,CAE/B;;AACA,UAAMA,KAAK,GAAGT,KAAK,CAACmB,IAAI,CAACG,IAAN,CAAnB;AACA,UAAMb,KAAK,CAACc,IAAN,EAAN;AACH;;AAED,iBAAeC,cAAf,CAA8BL,IAA9B,EAAmC;AAC/B,UAAMM,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,GAAN,CAAU,oCAAkC3B,MAAM,CAACoB,IAAI,CAACL,KAAN,CAAN,CAAmBa,WAAnB,EAAlC,GAAmE,QAAnE,GAA4E5B,MAAM,CAACoB,IAAI,CAACH,GAAN,CAAN,CAAiBW,WAAjB,EAAtF,EAAsHC,IAAtH,EAAvB;AACAtB,IAAAA,SAAS,CAACmB,QAAQ,CAACN,IAAV,CAAT;AACH;;AAED,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAE,MAAMf,YAAY,CAAC,IAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,KAAK,EAAE;AAACyB,QAAAA,QAAQ,EAAC,UAAV;AAAsBC,QAAAA,MAAM,EAAE;AAA9B,OAAZ;AAAA,6BACI,QAAC,YAAD;AACI,QAAA,GAAG,EAAEvB,WADT;AAEI,QAAA,MAAM,EAAEF,MAFZ;AAGI,QAAA,OAAO,EAAE,CAAET,aAAF,CAHb;AAII,QAAA,WAAW,EAAC,cAJhB;AAKI,QAAA,QAAQ,EAAEa,KAAK,IAAIS,cAAc,CAACT,KAAD,CALrC;AAMI,QAAA,QAAQ,EAAGsB,IAAD,IAAUP,cAAc,CAACO,IAAD;AANtC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAYI,QAAC,aAAD;AAAe,MAAA,MAAM,EAAE5B,SAAvB;AAAkC,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,KAAD,CAA7D;AAAsE,MAAA,YAAY,EAAGK,KAAD,IAAWD,YAAY,CAACC,KAAD;AAA3G;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GA3CuBP,Q;;KAAAA,Q","sourcesContent":["import React, {useRef, useState} from 'react'\r\nimport FullCalendar from '@fullcalendar/react' // must go before plugins\r\nimport dayGridPlugin from '@fullcalendar/daygrid' // a plugin!\r\nimport AddEventModal from './AddEventModal';\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nconst Event = require(\"../../../server/Models/Event\");\r\n\r\nexport default function Calendar() {\r\n\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [events, setEvents] = useState([]);\r\n    const calendarRef = useRef(null);\r\n    \r\n    const onEventAdded = event => {\r\n        let calendarApi = calendarRef.current.getApi();\r\n        calendarApi.addEvent({\r\n            start: moment(event.start).toDate(),\r\n            end: moment(event.end).toDate(),\r\n            title: event.title\r\n        });\r\n    } \r\n\r\n    async function handleEventAdd(data){\r\n        console.log(data.event);\r\n        // await axios.post(\"/api/calendar/create-event\", data.event);\r\n        const event = Event(data.body);\r\n        await event.save();\r\n    }\r\n\r\n    async function handleDatesSet(data){\r\n        const response = await axios.get(\"/api/calendar/get-events?start=\"+moment(data.start).toISOString()+\"&ends=\"+moment(data.end).toISOString()).then();\r\n        setEvents(response.data);\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <button onClick={() => setModalOpen(true)}>Add Event</button>\r\n            <div style={{position:\"relative\", zIndex: 0}}>\r\n                <FullCalendar\r\n                    ref={calendarRef}\r\n                    events={events}\r\n                    plugins={[ dayGridPlugin ]}\r\n                    initialView=\"dayGridMonth\"\r\n                    eventAdd={event => handleEventAdd(event)}\r\n                    datesSet={(date) => handleDatesSet(date)}\r\n                    />\r\n            </div>\r\n            <AddEventModal isOpen={modalOpen} onClose={() => setModalOpen(false)} onEventAdded={(event) => onEventAdded(event)}/>\r\n        </section>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}