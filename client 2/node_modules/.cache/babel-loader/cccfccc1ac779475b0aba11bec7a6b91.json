{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\Work\\\\Order Room\\\\client 2\\\\src\\\\Components\\\\ChooseRoom\\\\ChooseRoom.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { Grid, Button, Typography, Autocomplete, TextField } from '@mui/material';\nimport useStyles from \"./Styles\";\nimport { createTheme, responsiveFontSizes, ThemeProvider } from '@mui/material/styles';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Link, useLocation } from 'react-router-dom';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet theme = createTheme();\ntheme = responsiveFontSizes(theme);\nexport default function BasicGrid() {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = open && options.length === 0;\n\n  async function handleRoomsSet(data) {\n    const response = await axios.get(\"/api/chooseRoom/get-rooms\").then();\n    console.log(response.data);\n    setOptions(response.data);\n  }\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      const response = await axios.get(\"/api/chooseRoom/get-rooms\").then(); // For demo purposes.\n\n      if (active) {\n        setOptions(response.data);\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.root,\n    rowSpacing: 0,\n    columnSpacing: 0,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.textItem,\n      children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          className: classes.text,\n          children: \"\\u05E9\\u05DD \\u05D4\\u05DB\\u05D9\\u05EA\\u05D4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.AutocompleteItem,\n      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n        id: \"asynchronous-demo\",\n        sx: {\n          width: 300\n        },\n        open: open,\n        onOpen: () => {\n          setOpen(true);\n        },\n        onClose: () => {\n          setOpen(false);\n        },\n        isOptionEqualToValue: (option, value) => option.title === value.title,\n        getOptionLabel: option => option.title,\n        options: options,\n        loading: loading,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          label: \"Asynchronous\",\n          InputProps: { ...params.InputProps,\n            endAdornment: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                color: \"inherit\",\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 28\n              }, this) : null, params.InputProps.endAdornment]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      lg: 3,\n      className: classes.item,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        component: Link,\n        to: \"/calendar\",\n        variant: \"contained\",\n        color: \"secondary\",\n        className: classes.button,\n        size: \"large\",\n        children: \"\\u05DC\\u05D7\\u05D9\\u05E4\\u05D5\\u05E9 \\u05DB\\u05D9\\u05EA\\u05D4 \\u05DC\\u05E4\\u05D9 \\u05EA\\u05D0\\u05E8\\u05D9\\u05DA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      lg: 3,\n      className: classes.item,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        component: Link,\n        to: \"/choose-room\",\n        variant: \"contained\",\n        color: \"secondary\",\n        className: classes.button,\n        size: \"large\",\n        children: \"\\u05D4\\u05DE\\u05E9\\u05DA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BasicGrid, \"OcGYLEcT8kgxHBQ+eExMC3ff6wU=\", false, function () {\n  return [useStyles];\n});\n\n_c = BasicGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicGrid\");","map":{"version":3,"sources":["C:/Users/user/Documents/Work/Order Room/client 2/src/Components/ChooseRoom/ChooseRoom.jsx"],"names":["React","useState","Grid","Button","Typography","Autocomplete","TextField","useStyles","createTheme","responsiveFontSizes","ThemeProvider","CircularProgress","Link","useLocation","axios","theme","BasicGrid","classes","open","setOpen","options","setOptions","loading","length","handleRoomsSet","data","response","get","then","console","log","useEffect","active","undefined","root","textItem","text","AutocompleteItem","width","option","value","title","params","InputProps","endAdornment","item","button"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,UAAvB,EAAmCC,YAAnC,EAAiDC,SAAjD,QAAkE,eAAlE;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,SAASC,WAAT,EAAsBC,mBAAtB,EAA2CC,aAA3C,QAAgE,sBAAhE;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AAEA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,KAAK,GAAGP,WAAW,EAAvB;AACAO,KAAK,GAAGN,mBAAmB,CAACM,KAAD,CAA3B;AAGA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBnB,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB;AACF,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBrB,KAAK,CAACC,QAAN,CAAe,EAAf,CAA9B;AACA,QAAMqB,OAAO,GAAGJ,IAAI,IAAIE,OAAO,CAACG,MAAR,KAAmB,CAA3C;;AAEE,iBAAeC,cAAf,CAA8BC,IAA9B,EAAmC;AAC/B,UAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,2BAAV,EAAuCC,IAAvC,EAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACD,IAArB;AACAJ,IAAAA,UAAU,CAACK,QAAQ,CAACD,IAAV,CAAV;AACH;;AAEDzB,EAAAA,KAAK,CAAC+B,SAAN,CAAgB,MAAM;AAClB,QAAIC,MAAM,GAAG,IAAb;;AAEA,QAAI,CAACV,OAAL,EAAc;AACZ,aAAOW,SAAP;AACD;;AAED,KAAC,YAAY;AACX,YAAMP,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,2BAAV,EAAuCC,IAAvC,EAAvB,CADW,CAC2D;;AAEtE,UAAII,MAAJ,EAAY;AACVX,QAAAA,UAAU,CAACK,QAAQ,CAACD,IAAV,CAAV;AACD;AACF,KAND;;AAQA,WAAO,MAAM;AACXO,MAAAA,MAAM,GAAG,KAAT;AACD,KAFD;AAGD,GAlBH,EAkBK,CAACV,OAAD,CAlBL;AAoBEtB,EAAAA,KAAK,CAAC+B,SAAN,CAAgB,MAAM;AACpB,QAAI,CAACb,IAAL,EAAW;AACTG,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF,GAJD,EAIG,CAACH,IAAD,CAJH;AAOF,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAED,OAAO,CAACiB,IAAnC;AAAyC,IAAA,UAAU,EAAE,CAArD;AAAwD,IAAA,aAAa,EAAE,CAAvE;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,SAAS,EAAEjB,OAAO,CAACkB,QAAtC;AAAA,6BACI,QAAC,aAAD;AAAe,QAAA,KAAK,EAAEpB,KAAtB;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAEE,OAAO,CAACmB,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,SAAS,EAAEnB,OAAO,CAACoB,gBAAtC;AAAA,6BASI,QAAC,YAAD;AACV,QAAA,EAAE,EAAC,mBADO;AAEV,QAAA,EAAE,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAFM;AAGV,QAAA,IAAI,EAAEpB,IAHI;AAIV,QAAA,MAAM,EAAE,MAAM;AACZC,UAAAA,OAAO,CAAC,IAAD,CAAP;AACD,SANS;AAOV,QAAA,OAAO,EAAE,MAAM;AACbA,UAAAA,OAAO,CAAC,KAAD,CAAP;AACD,SATS;AAUV,QAAA,oBAAoB,EAAE,CAACoB,MAAD,EAASC,KAAT,KAAmBD,MAAM,CAACE,KAAP,KAAiBD,KAAK,CAACC,KAVtD;AAWV,QAAA,cAAc,EAAGF,MAAD,IAAYA,MAAM,CAACE,KAXzB;AAYV,QAAA,OAAO,EAAErB,OAZC;AAaV,QAAA,OAAO,EAAEE,OAbC;AAcV,QAAA,WAAW,EAAGoB,MAAD,iBACX,QAAC,SAAD,OACMA,MADN;AAEE,UAAA,KAAK,EAAC,cAFR;AAGE,UAAA,UAAU,EAAE,EACV,GAAGA,MAAM,CAACC,UADA;AAEVC,YAAAA,YAAY,eACV,QAAC,KAAD,CAAO,QAAP;AAAA,yBACGtB,OAAO,gBAAG,QAAC,gBAAD;AAAkB,gBAAA,KAAK,EAAC,SAAxB;AAAkC,gBAAA,IAAI,EAAE;AAAxC;AAAA;AAAA;AAAA;AAAA,sBAAH,GAAoD,IAD9D,EAEGoB,MAAM,CAACC,UAAP,CAAkBC,YAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAHQ;AAHd;AAAA;AAAA;AAAA;AAAA;AAfQ;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,YANJ,eA8CI,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,EAAE,EAAE,CAA9B;AAAiC,MAAA,EAAE,EAAE,CAArC;AAAwC,MAAA,SAAS,EAAE3B,OAAO,CAAC4B,IAA3D;AAAA,6BACQ,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAEjC,IAAnB;AAAyB,QAAA,EAAE,EAAC,WAA5B;AAAwC,QAAA,OAAO,EAAC,WAAhD;AAA4D,QAAA,KAAK,EAAC,WAAlE;AAA8E,QAAA,SAAS,EAAEK,OAAO,CAAC6B,MAAjG;AAAyG,QAAA,IAAI,EAAC,OAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YA9CJ,eAiDI,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,EAAE,EAAE,CAA9B;AAAiC,MAAA,EAAE,EAAE,CAArC;AAAwC,MAAA,SAAS,EAAE7B,OAAO,CAAC4B,IAA3D;AAAA,6BACQ,QAAC,MAAD;AAAS,QAAA,SAAS,EAAEjC,IAApB;AAA0B,QAAA,EAAE,EAAC,cAA7B;AAA4C,QAAA,OAAO,EAAC,WAApD;AAAgE,QAAA,KAAK,EAAC,WAAtE;AAAkF,QAAA,SAAS,EAAEK,OAAO,CAAC6B,MAArG;AAA6G,QAAA,IAAI,EAAC,OAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YAjDJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuDH;;GA9FuB9B,S;UACJT,S;;;KADIS,S","sourcesContent":["import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { Grid, Button, Typography, Autocomplete, TextField } from '@mui/material';\r\nimport useStyles from \"./Styles\";\r\nimport { createTheme, responsiveFontSizes, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport axios from \"axios\";\r\n\r\nlet theme = createTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\n\r\nexport default function BasicGrid() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n  const [options, setOptions] = React.useState([]);\r\n  const loading = open && options.length === 0;\r\n\r\n    async function handleRoomsSet(data){\r\n        const response = await axios.get(\"/api/chooseRoom/get-rooms\").then();\r\n        console.log(response.data);\r\n        setOptions(response.data);\r\n    }\r\n    \r\n    React.useEffect(() => {\r\n        let active = true;\r\n    \r\n        if (!loading) {\r\n          return undefined;\r\n        }\r\n    \r\n        (async () => {\r\n          const response = await axios.get(\"/api/chooseRoom/get-rooms\").then(); // For demo purposes.\r\n    \r\n          if (active) {\r\n            setOptions(response.data);\r\n          }\r\n        })();\r\n    \r\n        return () => {\r\n          active = false;\r\n        };\r\n      }, [loading]);\r\n    \r\n      React.useEffect(() => {\r\n        if (!open) {\r\n          setOptions([]);\r\n        }\r\n      }, [open]);\r\n    \r\n    \r\n    return (\r\n        <Grid container className={classes.root} rowSpacing={0} columnSpacing={0}>\r\n            <Grid item xs={12} className={classes.textItem}>\r\n                <ThemeProvider theme={theme}>\r\n                    <Typography variant=\"h3\" className={classes.text}>שם הכיתה</Typography>\r\n                </ThemeProvider>\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.AutocompleteItem}>\r\n                {/* <Autocomplete\r\n                    \r\n                    disablePortal\r\n                    id=\"combo-box-demo\"\r\n                    options={options}\r\n                    sx={{ width: 300 }}\r\n                    renderInput={(params) => <TextField {...params} label=\"דוגמה: אודיטוריום\" />}\r\n                /> */}\r\n                <Autocomplete\r\n      id=\"asynchronous-demo\"\r\n      sx={{ width: 300 }}\r\n      open={open}\r\n      onOpen={() => {\r\n        setOpen(true);\r\n      }}\r\n      onClose={() => {\r\n        setOpen(false);\r\n      }}\r\n      isOptionEqualToValue={(option, value) => option.title === value.title}\r\n      getOptionLabel={(option) => option.title}\r\n      options={options}\r\n      loading={loading}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label=\"Asynchronous\"\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <React.Fragment>\r\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                {params.InputProps.endAdornment}\r\n              </React.Fragment>\r\n            ),\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3} className={classes.item}>\r\n                    <Button component={Link} to=\"/calendar\" variant=\"contained\" color=\"secondary\" className={classes.button} size=\"large\">לחיפוש כיתה לפי תאריך</Button>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3} className={classes.item}>\r\n                    <Button  component={Link} to=\"/choose-room\" variant=\"contained\" color=\"secondary\" className={classes.button} size=\"large\">המשך</Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}